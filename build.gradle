buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://dl.bintray.com/kotlin/kotlin-dev" }
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.41"
        classpath "com.github.JetBrains:gradle-grammar-kit-plugin:2018.1.2"
    }
}

plugins {
    id "org.jetbrains.intellij" version "0.3.0"
    id "org.jetbrains.kotlin.jvm" version "1.2.41"
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "http://repository.jetbrains.com/all"
    }
    maven {
        url "https://dl.bintray.com/kotlin/kotlin-dev"
    }
}

ext.kotlinVersion = '1.2.41'
ext.junitVersion = '4.1.1'

// ---------------
// JAVA AND KOTLIN

apply plugin: 'java'
apply plugin: 'kotlin'

// JDK compatibility
sourceCompatibility = javaVersion
targetCompatibility = javaTargetVersion
tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

// Kotlin compatibility
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        jvmTarget = javaTargetVersion
        languageVersion = "1.2"
        apiVersion = "1.2"
    }
}

def genRoot = file('gen')

sourceSets {
    main {
        kotlin.srcDir 'src/main/kotlin'
        java.srcDir genRoot
        resources.srcDir 'src/main/resources'
    }

    test {
        kotlin.srcDir 'src/test/kotlin'
        resources.srcDir 'src/test/resources'
    }
}

// ---------------------------------------------
// INTELLIJ (GRADLE STUFF FOR PLUGIN DEVELOPERS)

apply plugin: 'org.jetbrains.intellij'

intellij {
    version intellijPlatformVersion
    pluginName 'intellij-elm'
}

// ------------------------------------------------
// IDEA (GRADLE STUFF FOR NORMAL INTELLIJ PROJECTS)

apply plugin: 'idea'

idea {
    project {
        jdkName = javaVersion
        languageLevel = javaVersion
    }
    module {
        generatedSourceDirs += genRoot
    }
}

// -----------
// GRAMMAR KIT

apply plugin: 'org.jetbrains.grammarkit'
import org.jetbrains.grammarkit.tasks.GenerateLexer
import org.jetbrains.grammarkit.tasks.GenerateParser

grammarKit {
    jflexRelease = '1.7.0'
    grammarKitRelease = '1.5.2'
}

task generateElmLexer(type: GenerateLexer) {
    source = "src/main/grammars/ElmLexer.flex"
    targetDir = "gen/org/elm/lang/core/lexer/"
    targetClass = "_ElmLexer"
    purgeOldFiles = true
    skeleton = "src/main/grammars/lexer.skeleton"
}

task generateElmParser(type: GenerateParser) {
    source = "src/main/grammars/ElmParser.bnf"
    targetRoot = genRoot
    pathToParser = '/org/elm/lang/core/parser/ElmParser.java'
    pathToPsiRoot = '/org/elm/lang/core/psi'
    purgeOldFiles = true
}

task generateCode {
    dependsOn generateElmParser
    dependsOn generateElmLexer
}

// ----------------
// MY PLUGIN ITSELF

group 'org.elm'
version myPluginVersion

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    testCompile "junit:junit:$junitVersion"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
}

compileKotlin {
    dependsOn generateCode
}
