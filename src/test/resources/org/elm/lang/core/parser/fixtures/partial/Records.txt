Elm File
  ElmTypeAliasDeclaration(TYPE_ALIAS_DECLARATION)
    PsiElement(TYPE)('type')
    PsiWhiteSpace(' ')
    PsiElement(ALIAS)('alias')
    PsiWhiteSpace(' ')
    PsiElement(UPPER_CASE_IDENTIFIER)('P')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmTypeRef(TYPE_REF)
      ElmRecordType(RECORD_TYPE)
        PsiElement(LEFT_BRACE)('{')
        PsiErrorElement:LOWER_CASE_IDENTIFIER or RIGHT_BRACE expected, got '
'
          <empty list>
  PsiElement(VIRTUAL_END_DECL)('\n')
  ElmTypeAliasDeclaration(TYPE_ALIAS_DECLARATION)
    PsiElement(TYPE)('type')
    PsiWhiteSpace(' ')
    PsiElement(ALIAS)('alias')
    PsiWhiteSpace(' ')
    PsiElement(UPPER_CASE_IDENTIFIER)('Q')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmTypeRef(TYPE_REF)
      ElmRecordType(RECORD_TYPE)
        PsiElement(LEFT_BRACE)('{')
  PsiWhiteSpace(' ')
  PsiElement(LOWER_CASE_IDENTIFIER)('x')
  PsiWhiteSpace(' ')
  PsiElement(COLON)(':')
  PsiErrorElement:<type ref> expected, got '
'
    <empty list>
  PsiElement(VIRTUAL_END_DECL)('\n')
  ElmTypeAliasDeclaration(TYPE_ALIAS_DECLARATION)
    PsiElement(TYPE)('type')
    PsiWhiteSpace(' ')
    PsiElement(ALIAS)('alias')
    PsiWhiteSpace(' ')
    PsiElement(UPPER_CASE_IDENTIFIER)('R')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmTypeRef(TYPE_REF)
      ElmRecordType(RECORD_TYPE)
        PsiElement(LEFT_BRACE)('{')
        PsiWhiteSpace(' ')
        ElmFieldType(FIELD_TYPE)
          PsiElement(LOWER_CASE_IDENTIFIER)('x')
          PsiWhiteSpace(' ')
          PsiElement(COLON)(':')
          PsiWhiteSpace(' ')
          ElmTypeRef(TYPE_REF)
            ElmUpperPathTypeRef(UPPER_PATH_TYPE_REF)
              ElmUpperCaseQID(UPPER_CASE_QID)
                PsiElement(UPPER_CASE_IDENTIFIER)('Int')
        PsiErrorElement:ARROW, COMMA, LEFT_BRACE, LEFT_PARENTHESIS, LOWER_CASE_IDENTIFIER, RIGHT_BRACE or UPPER_CASE_IDENTIFIER expected, got '
'
          <empty list>
  PsiElement(VIRTUAL_END_DECL)('\n')
  ElmTypeAliasDeclaration(TYPE_ALIAS_DECLARATION)
    PsiElement(TYPE)('type')
    PsiWhiteSpace(' ')
    PsiElement(ALIAS)('alias')
    PsiWhiteSpace(' ')
    PsiElement(UPPER_CASE_IDENTIFIER)('S')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmTypeRef(TYPE_REF)
      ElmRecordType(RECORD_TYPE)
        PsiElement(LEFT_BRACE)('{')
        PsiWhiteSpace(' ')
        ElmFieldType(FIELD_TYPE)
          PsiElement(LOWER_CASE_IDENTIFIER)('x')
          PsiWhiteSpace(' ')
          PsiElement(COLON)(':')
          PsiWhiteSpace(' ')
          ElmTypeRef(TYPE_REF)
            ElmUpperPathTypeRef(UPPER_PATH_TYPE_REF)
              ElmUpperCaseQID(UPPER_CASE_QID)
                PsiElement(UPPER_CASE_IDENTIFIER)('Int')
        PsiElement(COMMA)(',')
        PsiErrorElement:LOWER_CASE_IDENTIFIER expected, got '
'
          <empty list>
  PsiWhiteSpace('\n')
  PsiElement(VIRTUAL_END_DECL)('\n')
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('p')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmListOfOperands(LIST_OF_OPERANDS)
        ElmRecord(RECORD)
          PsiElement(LEFT_BRACE)('{')
          PsiErrorElement:LOWER_CASE_IDENTIFIER or RIGHT_BRACE expected, got '
'
            <empty list>
  PsiElement(VIRTUAL_END_DECL)('\n')
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('t')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmListOfOperands(LIST_OF_OPERANDS)
        ElmRecord(RECORD)
          PsiElement(LEFT_BRACE)('{')
          PsiWhiteSpace(' ')
          PsiElement(LOWER_CASE_IDENTIFIER)('x')
          PsiErrorElement:EQ or PIPE expected, got '
'
            <empty list>
  PsiElement(VIRTUAL_END_DECL)('\n')
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('q')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmListOfOperands(LIST_OF_OPERANDS)
        ElmRecord(RECORD)
          PsiElement(LEFT_BRACE)('{')
          PsiWhiteSpace(' ')
          ElmField(FIELD)
            PsiElement(LOWER_CASE_IDENTIFIER)('x')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiErrorElement:<list of operands> expected, got '
'
              <empty list>
  PsiElement(VIRTUAL_END_DECL)('\n')
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('r')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmListOfOperands(LIST_OF_OPERANDS)
        ElmRecord(RECORD)
          PsiElement(LEFT_BRACE)('{')
          PsiWhiteSpace(' ')
          ElmField(FIELD)
            PsiElement(LOWER_CASE_IDENTIFIER)('x')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            ElmExpression(EXPRESSION)
              ElmListOfOperands(LIST_OF_OPERANDS)
                PsiElement(NUMBER_LITERAL)('0')
          PsiWhiteSpace(' ')
          PsiElement(COMMA)(',')
          PsiErrorElement:LOWER_CASE_IDENTIFIER expected, got '
'
            <empty list>
  PsiElement(VIRTUAL_END_DECL)('\n')
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('s')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmListOfOperands(LIST_OF_OPERANDS)
        ElmRecord(RECORD)
          PsiElement(LEFT_BRACE)('{')
          PsiWhiteSpace(' ')
          ElmField(FIELD)
            PsiElement(LOWER_CASE_IDENTIFIER)('x')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            ElmExpression(EXPRESSION)
              ElmListOfOperands(LIST_OF_OPERANDS)
                PsiElement(NUMBER_LITERAL)('0')
          PsiWhiteSpace(' ')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          PsiElement(LOWER_CASE_IDENTIFIER)('y')
          PsiErrorElement:EQ expected, got '
'
            <empty list>
  PsiWhiteSpace('\n')
  PsiElement(VIRTUAL_END_DECL)('\n')
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('sentinel')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmListOfOperands(LIST_OF_OPERANDS)
        PsiElement(NUMBER_LITERAL)('42')