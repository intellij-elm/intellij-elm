Elm File
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('f1')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmListOfOperands(LIST_OF_OPERANDS)
        ElmIfElse(IF_ELSE)
          PsiElement(IF)('if')
          PsiErrorElement:<list of operands> expected, got '
'
            <empty list>
  PsiElement(VIRTUAL_END_DECL)('\n')
  PsiWhiteSpace('\n')
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('f2')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmListOfOperands(LIST_OF_OPERANDS)
        ElmIfElse(IF_ELSE)
          PsiElement(IF)('if')
          PsiWhiteSpace(' ')
          ElmExpression(EXPRESSION)
            ElmListOfOperands(LIST_OF_OPERANDS)
              ElmValueExpr(VALUE_EXPR)
                ElmValueQID(VALUE_QID)
                  PsiElement(LOWER_CASE_IDENTIFIER)('x')
          PsiErrorElement:<value expr>, BACKSLASH, CASE, CHAR_LITERAL, IF, LEFT_BRACE, LEFT_PARENTHESIS, LEFT_SQUARE_BRACKET, LET, NUMBER_LITERAL, OPERATOR_IDENTIFIER, START_GLSL_CODE, STRING_LITERAL or THEN expected, got '
'
            <empty list>
  PsiElement(VIRTUAL_END_DECL)('\n')
  PsiWhiteSpace('\n')
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('f3')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmListOfOperands(LIST_OF_OPERANDS)
        ElmIfElse(IF_ELSE)
          PsiElement(IF)('if')
          PsiWhiteSpace(' ')
          ElmExpression(EXPRESSION)
            ElmListOfOperands(LIST_OF_OPERANDS)
              ElmValueExpr(VALUE_EXPR)
                ElmValueQID(VALUE_QID)
                  PsiElement(LOWER_CASE_IDENTIFIER)('x')
          PsiWhiteSpace(' ')
          PsiElement(THEN)('then')
          PsiErrorElement:<list of operands> expected, got 'type'
            <empty list>
  PsiWhiteSpace('\n')
  PsiWhiteSpace('        ')
  PsiElement(TYPE)('type')
  PsiWhiteSpace(' ')
  PsiElement(ALIAS)('alias')
  PsiWhiteSpace(' ')
  PsiElement(UPPER_CASE_IDENTIFIER)('Garbage')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('     ')
  PsiElement(ELSE)('else')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('        ')
  PsiElement(NUMBER_LITERAL)('42')
  PsiElement(VIRTUAL_END_DECL)('\n')
  PsiWhiteSpace('\n')
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('f4')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmListOfOperands(LIST_OF_OPERANDS)
        ElmIfElse(IF_ELSE)
          PsiElement(IF)('if')
          PsiWhiteSpace(' ')
          ElmExpression(EXPRESSION)
            ElmListOfOperands(LIST_OF_OPERANDS)
              ElmValueExpr(VALUE_EXPR)
                ElmValueQID(VALUE_QID)
                  PsiElement(LOWER_CASE_IDENTIFIER)('x')
          PsiWhiteSpace(' ')
          PsiElement(THEN)('then')
          PsiWhiteSpace(' ')
          ElmExpression(EXPRESSION)
            ElmListOfOperands(LIST_OF_OPERANDS)
              PsiElement(NUMBER_LITERAL)('42')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('     ')
          PsiElement(ELSE)('else')
          PsiErrorElement:<list of operands> expected, got 'type'
            <empty list>
  PsiWhiteSpace(' ')
  PsiElement(TYPE)('type')
  PsiWhiteSpace(' ')
  PsiElement(ALIAS)('alias')
  PsiWhiteSpace(' ')
  PsiElement(UPPER_CASE_IDENTIFIER)('Garbage')
  PsiWhiteSpace(' ')
  PsiElement(EQ)('=')
  PsiWhiteSpace(' ')
  PsiElement(UPPER_CASE_IDENTIFIER)('String')