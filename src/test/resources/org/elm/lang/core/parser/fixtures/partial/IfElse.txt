Elm File
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('f1')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmIfElseExpr(IF_ELSE_EXPR)
        PsiElement(IF)('if')
        PsiErrorElement:<expression> expected, got '
'
          <empty list>
  PsiElement(VIRTUAL_END_DECL)('\n')
  PsiWhiteSpace('\n')
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('f2')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmIfElseExpr(IF_ELSE_EXPR)
        PsiElement(IF)('if')
        PsiWhiteSpace(' ')
        ElmExpression(EXPRESSION)
          ElmValueExpr(VALUE_EXPR)
            ElmValueQID(VALUE_QID)
              PsiElement(LOWER_CASE_IDENTIFIER)('x')
        PsiErrorElement:<expression>, OPERATOR_IDENTIFIER or THEN expected, got '
'
          <empty list>
  PsiElement(VIRTUAL_END_DECL)('\n')
  PsiWhiteSpace('\n')
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('f3')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmIfElseExpr(IF_ELSE_EXPR)
        PsiElement(IF)('if')
        PsiWhiteSpace(' ')
        ElmExpression(EXPRESSION)
          ElmValueExpr(VALUE_EXPR)
            ElmValueQID(VALUE_QID)
              PsiElement(LOWER_CASE_IDENTIFIER)('x')
        PsiWhiteSpace(' ')
        PsiElement(THEN)('then')
        PsiErrorElement:<expression> expected, got 'type'
          <empty list>
  PsiWhiteSpace('\n')
  PsiWhiteSpace('        ')
  PsiElement(TYPE)('type')
  PsiWhiteSpace(' ')
  PsiElement(ALIAS)('alias')
  PsiWhiteSpace(' ')
  PsiElement(UPPER_CASE_IDENTIFIER)('Garbage')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('     ')
  PsiElement(ELSE)('else')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('        ')
  PsiElement(NUMBER_LITERAL)('42')
  PsiElement(VIRTUAL_END_DECL)('\n')
  PsiWhiteSpace('\n')
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('f4')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmIfElseExpr(IF_ELSE_EXPR)
        PsiElement(IF)('if')
        PsiWhiteSpace(' ')
        ElmExpression(EXPRESSION)
          ElmValueExpr(VALUE_EXPR)
            ElmValueQID(VALUE_QID)
              PsiElement(LOWER_CASE_IDENTIFIER)('x')
        PsiWhiteSpace(' ')
        PsiElement(THEN)('then')
        PsiWhiteSpace(' ')
        ElmExpression(EXPRESSION)
          ElmNumberConstantExpr(NUMBER_CONSTANT_EXPR)
            PsiElement(NUMBER_LITERAL)('42')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('     ')
        PsiElement(ELSE)('else')
        PsiErrorElement:<expression> or IF expected, got 'type'
          <empty list>
  PsiWhiteSpace(' ')
  PsiElement(TYPE)('type')
  PsiWhiteSpace(' ')
  PsiElement(ALIAS)('alias')
  PsiWhiteSpace(' ')
  PsiElement(UPPER_CASE_IDENTIFIER)('Garbage')
  PsiWhiteSpace(' ')
  PsiElement(EQ)('=')
  PsiWhiteSpace(' ')
  PsiElement(UPPER_CASE_IDENTIFIER)('String')