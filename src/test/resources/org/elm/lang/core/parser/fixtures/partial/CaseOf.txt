Elm File
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('f1')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmCaseOf(CASE_OF)
        PsiElement(CASE)('case')
        PsiErrorElement:<expression> expected, got '
'
          <empty list>
  PsiElement(VIRTUAL_END_DECL)('\n')
  PsiWhiteSpace('\n')
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('f2')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmCaseOf(CASE_OF)
        PsiElement(CASE)('case')
        PsiWhiteSpace(' ')
        ElmExpression(EXPRESSION)
          ElmValueExpr(VALUE_EXPR)
            ElmValueQID(VALUE_QID)
              PsiElement(LOWER_CASE_IDENTIFIER)('x')
        PsiErrorElement:'-', <value expr>, BACKSLASH, CASE, IF, LEFT_BRACE, LEFT_PARENTHESIS, LEFT_SQUARE_BRACKET, LET, LOWER_CASE_IDENTIFIER, NUMBER_LITERAL, OF, OPEN_CHAR, OPEN_QUOTE, OPERATOR_IDENTIFIER or START_GLSL_CODE expected, got '
'
          <empty list>
  PsiElement(VIRTUAL_END_DECL)('\n')
  PsiWhiteSpace('\n')
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('f3')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmCaseOf(CASE_OF)
        PsiElement(CASE)('case')
        PsiWhiteSpace(' ')
        ElmExpression(EXPRESSION)
          ElmValueExpr(VALUE_EXPR)
            ElmValueQID(VALUE_QID)
              PsiElement(LOWER_CASE_IDENTIFIER)('x')
        PsiWhiteSpace(' ')
        PsiElement(OF)('of')
        PsiErrorElement:VIRTUAL_OPEN_SECTION expected, got '
'
          <empty list>
  PsiElement(VIRTUAL_END_DECL)('\n')
  PsiWhiteSpace('\n')
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('f4')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmCaseOf(CASE_OF)
        PsiElement(CASE)('case')
        PsiWhiteSpace(' ')
        ElmExpression(EXPRESSION)
          ElmValueExpr(VALUE_EXPR)
            ElmValueQID(VALUE_QID)
              PsiElement(LOWER_CASE_IDENTIFIER)('x')
        PsiWhiteSpace(' ')
        PsiElement(OF)('of')
        PsiWhiteSpace('\n')
        PsiElement(VIRTUAL_OPEN_SECTION)('        ')
        PsiErrorElement:<pattern> expected, got 'type'
          PsiElement(TYPE)('type')
        PsiWhiteSpace(' ')
        PsiElement(ALIAS)('alias')
        PsiWhiteSpace(' ')
        PsiElement(UPPER_CASE_IDENTIFIER)('Garbage')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        PsiElement(UPPER_CASE_IDENTIFIER)('String')
  PsiElement(VIRTUAL_END_DECL)('\n')
  PsiWhiteSpace('\n')
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('f5')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmCaseOf(CASE_OF)
        PsiElement(CASE)('case')
        PsiWhiteSpace(' ')
        ElmExpression(EXPRESSION)
          ElmValueExpr(VALUE_EXPR)
            ElmValueQID(VALUE_QID)
              PsiElement(LOWER_CASE_IDENTIFIER)('x')
        PsiWhiteSpace(' ')
        PsiElement(OF)('of')
        PsiWhiteSpace('\n')
        PsiElement(VIRTUAL_OPEN_SECTION)('        ')
        ElmCaseOfBranch(CASE_OF_BRANCH)
          ElmPattern(PATTERN)
            ElmUnionPattern(UNION_PATTERN)
              ElmUpperCaseQID(UPPER_CASE_QID)
                PsiElement(UPPER_CASE_IDENTIFIER)('Just')
              PsiWhiteSpace(' ')
              ElmPattern(PATTERN)
                ElmLowerPattern(LOWER_PATTERN)
                  PsiElement(LOWER_CASE_IDENTIFIER)('y')
          PsiErrorElement:'::', <pattern>, ARROW or AS expected, got ''
            <empty list>
  PsiElement(VIRTUAL_END_DECL)('\n')
  PsiWhiteSpace('\n')
  ElmValueDeclaration(VALUE_DECLARATION)
    ElmFunctionDeclarationLeft(FUNCTION_DECLARATION_LEFT)
      PsiElement(LOWER_CASE_IDENTIFIER)('f6')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpression(EXPRESSION)
      ElmCaseOf(CASE_OF)
        PsiElement(CASE)('case')
        PsiWhiteSpace(' ')
        ElmExpression(EXPRESSION)
          ElmValueExpr(VALUE_EXPR)
            ElmValueQID(VALUE_QID)
              PsiElement(LOWER_CASE_IDENTIFIER)('x')
        PsiWhiteSpace(' ')
        PsiElement(OF)('of')
        PsiWhiteSpace('\n')
        PsiElement(VIRTUAL_OPEN_SECTION)('        ')
        ElmCaseOfBranch(CASE_OF_BRANCH)
          ElmPattern(PATTERN)
            ElmUnionPattern(UNION_PATTERN)
              ElmUpperCaseQID(UPPER_CASE_QID)
                PsiElement(UPPER_CASE_IDENTIFIER)('Just')
              PsiWhiteSpace(' ')
              ElmPattern(PATTERN)
                ElmLowerPattern(LOWER_PATTERN)
                  PsiElement(LOWER_CASE_IDENTIFIER)('y')
          PsiWhiteSpace(' ')
          PsiElement(ARROW)('->')
          PsiWhiteSpace(' ')
          PsiErrorElement:<expression> expected, got 'type'
            PsiElement(TYPE)('type')
          PsiWhiteSpace(' ')
          PsiElement(ALIAS)('alias')
          PsiWhiteSpace(' ')
          PsiElement(UPPER_CASE_IDENTIFIER)('Garbage')
        PsiElement(VIRTUAL_END_DECL)('\n')
        PsiWhiteSpace('        ')
        ElmCaseOfBranch(CASE_OF_BRANCH)
          ElmPattern(PATTERN)
            ElmUnionPattern(UNION_PATTERN)
              ElmUpperCaseQID(UPPER_CASE_QID)
                PsiElement(UPPER_CASE_IDENTIFIER)('Nothing')
          PsiWhiteSpace(' ')
          PsiElement(ARROW)('->')
          PsiWhiteSpace(' ')
          ElmExpression(EXPRESSION)
            ElmNumberConstant(NUMBER_CONSTANT)
              PsiElement(NUMBER_LITERAL)('42')