<idea-plugin>
    <!-- Changing the ID will prohibit upgrades of version of the plugin with a previous ID. -->
    <id>intellij-elm</id>
    <name>Elm</name>
    <vendor url="https://github.com/intellij-elm">The Elm Plugin Contributors</vendor>

    <description><![CDATA[
        Provides support for the Elm programming language
    ]]></description>

    <!-- We set the lower bound for the required IntelliJ version (build) manually, so we can omit the upper bound.
         This since we will always try to be compatible with the latest version of the IDEs.
         The build number here should reflect the `platformVersion` in `gradle.properties`. -->
    <idea-version since-build="213"/>

    <!-- please see https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>

    <extensions defaultExtensionNs="com.intellij">
        <projectService serviceImplementation="org.elm.lang.core.psi.ElmPsiManager"/>

        <additionalTextAttributes scheme="Default" file="colorSchemes/ElmDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colorSchemes/ElmDarcula.xml"/>
        <annotator language="Elm" implementationClass="org.elm.ide.highlight.ElmSyntaxHighlightAnnotator"/>
        <colorSettingsPage implementation="org.elm.ide.color.ElmColorSettingsPage"/>
        <enterHandlerDelegate implementation="org.elm.ide.typing.ElmOnEnterIndentHandler"/>
        <fileType name="Elm file" implementationClass="org.elm.lang.core.ElmFileType" fieldName="INSTANCE"
                  language="Elm" extensions="elm" />
        <internalFileTemplate name="Elm Module"/>
        <gotoSymbolContributor implementation="org.elm.ide.navigation.ElmGoToSymbolContributor"/>
        <lang.braceMatcher language="Elm" implementationClass="org.elm.ide.ElmPairedBraceMatcher"/>
        <lang.commenter language="Elm" implementationClass="org.elm.ide.commenter.ElmCommenter"/>
        <typedHandler implementation="org.elm.ide.ElmTypedHandler" id="ElmFile"/>
        <completion.contributor language="Elm"
                                implementationClass="org.elm.lang.core.completion.ElmCompletionContributor"/>
        <breadcrumbsInfoProvider implementation="org.elm.ide.structure.ElmBreadcrumbsProvider"/>
        <lang.findUsagesProvider language="Elm" implementationClass="org.elm.ide.search.ElmFindUsagesProvider"/>
        <lang.namesValidator language="Elm" implementationClass="org.elm.ide.refactoring.ElmNamesValidator"/>
        <lang.parserDefinition language="Elm" implementationClass="org.elm.lang.core.parser.ElmParserDefinition"/>
        <lang.psiStructureViewFactory language="Elm"
                                      implementationClass="org.elm.ide.structure.ElmStructureViewFactory"/>
        <lang.refactoringSupport language="Elm"
                                 implementationClass="org.elm.ide.refactoring.ElmRefactoringSupportProvider"/>
        <renamePsiElementProcessor implementation="org.elm.ide.refactoring.ElmRenamePsiFileProcessor"/>
        <renamePsiElementProcessor implementation="org.elm.ide.refactoring.ElmRenamePsiElementProcessor"/>
        <lang.syntaxHighlighterFactory language="Elm"
                                       implementationClass="org.elm.ide.highlight.ElmSyntaxHighlighterFactory"/>
        <spellchecker.support language="Elm" implementationClass="org.elm.ide.spelling.ElmSpellCheckingStrategy"/>
        <lang.foldingBuilder language="Elm" implementationClass="org.elm.ide.folding.ElmFoldingBuilder"/>
        <importFilteringRule implementation="org.elm.ide.usages.ElmImportFilteringRule"/>
        <lang.quoteHandler language="Elm" implementationClass="org.elm.ide.typing.ElmQuoteHandler"/>
        <backspaceHandlerDelegate implementation="org.elm.ide.typing.ElmBackspaceHandler"/>
        <codeInsight.parameterInfo language="Elm" implementationClass="org.elm.ide.hints.ElmParameterInfoHandler"/>
        <codeInsight.typeInfo language="Elm" implementationClass="org.elm.ide.hints.ElmExpressionTypeProvider"/>
        <codeInsight.lineMarkerProvider language="Elm" implementationClass="org.elm.ide.lineMarkers.ElmLineMarkerProvider"/>
        <lang.smartEnterProcessor language="Elm" implementationClass="org.elm.ide.typing.ElmSmartEnterProcessor"/>
        <extendWordSelectionHandler implementation="org.elm.ide.wordSelection.ElmDeclAnnotationSelectionHandler"/>
        <lang.importOptimizer language="Elm" implementationClass="org.elm.ide.refactoring.ElmImportOptimizer"/>
        <colorProvider implementation="org.elm.ide.color.ElmColorProvider"/>
        <codeStyleSettingsProvider implementation="org.elm.ide.formatter.settings.ElmCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider implementation="org.elm.ide.formatter.settings.ElmLanguageCodeStyleSettingsProvider"/>
        <refactoring.moveHandler implementation="org.elm.ide.refactoring.move.ElmMoveTopLevelItemHandler"/>

        <!-- New Project for IDEA -->
        <projectTemplatesFactory implementation="org.elm.ide.project.ElmProjectTemplatesFactory" />

        <!-- New Project for WebStorm -->
        <directoryProjectGenerator implementation="org.elm.ide.project.ElmWebProjectTemplate"/>

        <!-- DEPRECATED. See `ElmModuleType` for details! -->
        <moduleType id="ELM_MODULE" implementationClass="org.elm.ide.project.ElmModuleType"/>


        <!-- Inspections -->

        <lang.inspectionSuppressor language="Elm"
                                   implementationClass="org.elm.ide.inspections.ElmInspectionSuppressor"/>

        <localInspection language="Elm" groupName="Elm"
                         displayName="Type checker"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.elm.ide.inspections.ElmTypeInferenceInspection"/>

        <localInspection language="Elm" groupName="Elm"
                         displayName="Type declaration checker"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.elm.ide.inspections.ElmTypeDeclarationInspection"/>

        <localInspection language="Elm" groupName="Elm"
                         displayName="Add missing case branches"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.elm.ide.inspections.ElmIncompletePatternInspection"/>

        <localInspection language="Elm" groupName="Elm"
                         displayName="Tuple too large"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.elm.ide.inspections.ElmTupleSizeInspection"/>


        <localInspection language="Elm" groupName="Elm"
                         displayName="Unused symbol"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.elm.ide.inspections.ElmUnusedSymbolInspection"/>

        <localInspection language="Elm" groupName="Elm"
                         displayName="Unused import"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.elm.ide.inspections.ElmUnusedImportInspection"/>

        <localInspection language="Elm" groupName="Elm"
                         displayName="Unresolved reference"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.elm.ide.inspections.ElmUnresolvedReferenceInspection"/>

        <localInspection language="Elm" groupName="Elm"
                         displayName="Invalid (..) on alias import"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.elm.ide.inspections.ElmExposingAliasVariantsInspection"/>

        <localInspection language="Elm" groupName="Elm"
                         displayName="Conflicting declarations"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.elm.ide.inspections.ElmDuplicateDeclarationInspection"/>

        <localInspection language="Elm" groupName="Elm"
                         displayName="Top-level destructuring is forbidden"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.elm.ide.inspections.ElmTopLevelDestructuringInspection"/>

        <localInspection language="Elm" groupName="Elm"
                         displayName="elm-review error"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.elm.ide.inspections.ElmReviewInspection"/>

        <!-- Intentions -->

        <intentionAction>
            <className>org.elm.ide.intentions.exposure.ExposeIntention</className>
            <category>Elm</category>
        </intentionAction>
        <intentionAction>
            <className>org.elm.ide.intentions.exposure.ExposeWithVariantsIntention</className>
            <category>Elm</category>
        </intentionAction>
        <intentionAction>
            <className>org.elm.ide.intentions.exposure.ExposeVariantsIntention</className>
            <category>Elm</category>
        </intentionAction>
        <intentionAction>
            <className>org.elm.ide.intentions.PipelineIntention</className>
            <category>Elm</category>
        </intentionAction>
        <intentionAction>
            <className>org.elm.ide.intentions.RemovePipelineIntention</className>
            <category>Elm</category>
        </intentionAction>
        <intentionAction>
            <className>org.elm.ide.intentions.exposure.StopExposingIntention</className>
            <category>Elm</category>
        </intentionAction>
        <intentionAction>
            <className>org.elm.ide.intentions.exposure.StopExposingVariantsIntention</className>
            <category>Elm</category>
        </intentionAction>
        <intentionAction>
            <className>org.elm.ide.intentions.MapToFoldIntention</className>
            <category>Elm</category>
        </intentionAction>
        <intentionAction>
            <className>org.elm.ide.intentions.RegularToTripleQuotedStringIntention</className>
            <category>Elm</category>
        </intentionAction>
        <intentionAction>
            <className>org.elm.ide.intentions.TripleQuotedToRegularStringIntention</className>
            <category>Elm</category>
        </intentionAction>
        <intentionAction>
            <className>org.elm.ide.intentions.MakeAnnotationIntention</className>
            <category>Elm</category>
        </intentionAction>
        <intentionAction>
            <className>org.elm.ide.intentions.MakeDecoderIntention</className>
            <category>Elm</category>
        </intentionAction>
        <intentionAction>
            <className>org.elm.ide.intentions.MakeEncoderIntention</className>
            <category>Elm</category>
        </intentionAction>
        <intentionAction>
            <className>org.elm.ide.intentions.RecordConstructorToLiteralIntention</className>
            <category>Elm</category>
        </intentionAction>
        <intentionAction>
            <className>org.elm.ide.intentions.InlineDebugIntention</className>
            <category>Elm</category>
        </intentionAction>

        <!-- ELM PROJECTS, PACKAGES AND DEPENDENCIES -->
        <projectService serviceImplementation="org.elm.workspace.ElmWorkspaceService"/>
        <additionalLibraryRootsProvider implementation="org.elm.workspace.ElmAdditionalLibraryRootsProvider"/>
        <projectConfigurable instance="org.elm.workspace.ui.ElmWorkspaceConfigurable" displayName="Elm"
                             groupId="language"/>
        <editorNotificationProvider implementation="org.elm.ide.notifications.ElmNeedsConfigNotificationProvider"/>
        <toolWindow id="Elm" anchor="right" icon="/icons/elm-toolwindow.png"
                    factoryClass="org.elm.ide.toolwindow.ElmToolWindowFactory"/>
        <toolWindow id="Elm Compiler" anchor="bottom" icon="/icons/elm-toolwindow.png"
                    factoryClass="org.elm.ide.toolwindow.ElmCompilerToolWindowFactory"/>
        <toolWindow id="elm-review" anchor="bottom" secondary="false" icon="/icons/elm-toolwindow.png"
                    factoryClass="org.elm.ide.toolwindow.ElmReviewToolWindowFactory"/>
        <toolWindow id="Friendly Messages" anchor="bottom" secondary="true" icon="/icons/elm-toolwindow.png"
                    factoryClass="org.elm.ide.toolwindow.ReportsToolWindowFactory"/>
        <projectService serviceImplementation="org.elm.workspace.ElmReviewService"/>


        <!-- STUBS -->
        <stubElementTypeHolder class="org.elm.lang.core.psi.ElmTypes"/>
        <stubIndex implementation="org.elm.lang.core.stubs.index.ElmModulesIndex"/>
        <stubIndex implementation="org.elm.lang.core.stubs.index.ElmNamedElementIndex"/>

        <multiHostInjector implementation="org.elm.ide.injection.ElmGlslInjector"/>

        <liveTemplateContext implementation="org.elm.ide.livetemplates.ElmLiveTemplateContext$Generic" contextId="ELM" baseContextId="EverywhereContextType"/>
        <liveTemplateContext implementation="org.elm.ide.livetemplates.ElmLiveTemplateContext$TopLevel" contextId="ELM_TOP_LEVEL" baseContextId="Generic"/>
        <liveTemplateContext implementation="org.elm.ide.livetemplates.ElmLiveTemplateContext$Expression" contextId="ELM_EXPRESSION" baseContextId="Generic"/>
        <liveTemplateContext implementation="org.elm.ide.livetemplates.ElmLiveTemplateContext$ValueDecl" contextId="ELM_VALUE_DECL" baseContextId="Generic"/>
        <defaultLiveTemplatesProvider implementation="org.elm.ide.livetemplates.ElmLiveTemplateProvider"/>

        <configurationType implementation="org.elm.ide.test.run.ElmTestRunConfigurationType"/>
        <programRunner implementation="org.elm.ide.test.run.ElmTestProgramRunner"/>
        <runConfigurationProducer implementation="org.elm.ide.test.run.ElmTestRunConfigurationProducer"/>
        <projectService serviceImplementation="org.elm.ide.test.run.ElmTestAutoTestManager"/>
    </extensions>

    <project-components>
        <component>
            <implementation-class>org.elm.ide.components.ElmFormatOnFileSaveComponent</implementation-class>
        </component>
    </project-components>

    <actions>
        <action id="Elm.NewFile"
                class="org.elm.ide.actions.ElmCreateFileAction"
                text="Elm File"
                description="Create new Elm file">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>

        <action id="Elm.AttachElmProject"
                class="org.elm.workspace.ElmAttachProjectAction"
                text="Attach elm.json project file"
                icon="AllIcons.General.Add">
        </action>

        <action id="Elm.DetachElmProject"
                class="org.elm.workspace.ElmDetachProjectAction"
                text="Detach elm.json project file"
                icon="AllIcons.General.Remove"/>

        <action id="Elm.RefreshElmProjects"
                class="org.elm.workspace.ElmRefreshProjectsAction"
                text="Refresh Elm projects"
                icon="AllIcons.Actions.Refresh"/>

        <action id="Elm.RunExternalElmFormat"
                class="org.elm.ide.actions.ElmExternalFormatAction"
                text="Run elm-format on current file">
            <add-to-group group-id="CodeMenu" anchor="last"/>
        </action>

        <action id="Elm.RunExternalElmReview"
                class="org.elm.ide.actions.ElmExternalReviewAction"
                text="Review Elm Project"
                icon="AllIcons.Toolwindows.ToolWindowBuild">
            <keyboard-shortcut first-keystroke="alt shift V" keymap="$default"/>
            <add-to-group group-id="CodeMenu"/>
        </action>

        <action id="Elm.RunExternalElmReviewWatchmode"
                class="org.elm.ide.actions.ElmExternalReviewWatchmodeAction"
                text="Review Elm Project in watchmode"
                icon="AllIcons.Toolwindows.ToolWindowBuild">
            <keyboard-shortcut first-keystroke="alt shift W" keymap="$default"/>
            <add-to-group group-id="CodeMenu"/>
        </action>

        <group id="Elm.WorkspaceToolsGroup" text="Elm" popup="true">
            <reference id="Elm.RefreshElmProjects"/>
            <separator/>
            <reference id="Elm.AttachElmProject"/>
            <reference id="Elm.DetachElmProject"/>

            <add-to-group group-id="ToolsMenu"/>
        </group>

        <action id="Elm.Build"
                class="org.elm.workspace.compiler.ElmBuildAction"
                text="Build Elm Project"
                icon="AllIcons.Toolwindows.ToolWindowBuild"
                keymap="$default">
            <keyboard-shortcut first-keystroke="alt shift P" keymap="$default"/>
        </action>

        <group id="Elm.CompilerToolsGroup" text="Elm Compiler" popup="true">
            <reference id="Elm.Build"/>
            <add-to-group group-id="Elm.WorkspaceToolsGroup"/>
        </group>

        <group id="Elm.ReviewToolsGroup" text="elm-review" popup="true">
            <reference id="Elm.RunExternalElmReview"/>
        </group>
        <group id="Elm.ReviewWatchmodeToolsGroup" text="elm-review-watchmode" popup="true">
            <reference id="Elm.RunExternalElmReviewWatchmode"/>
        </group>
    </actions>

</idea-plugin>
